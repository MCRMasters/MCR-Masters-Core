"""Add Character table + character_code + seed default c0

Revision ID: a651a745199f
Revises: 4ae002ce3c29
Create Date: 2025-05-02 06:51:50.434698

"""

from datetime import datetime, timezone
from typing import Sequence, Union
import uuid

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "a651a745199f"
down_revision: Union[str, None] = "4ae002ce3c29"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "character",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("code", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_character_code"), "character", ["code"], unique=True)

    # ── 기본 캐릭터(c0) 시드 삽입 ─────────────────────────
    character_tbl = sa.table(
        "character",
        sa.column("id", sa.Uuid(as_uuid=True)),
        sa.column("code", sa.String(length=10)),
        sa.column("name", sa.String()),
        sa.column("created_at", sa.DateTime(timezone=True)),
        sa.column("updated_at", sa.DateTime(timezone=True)),
    )
    op.bulk_insert(
        character_tbl,
        [
            {
                "id": uuid.uuid4(),
                "code": "c0",
                "name": "default",
                "created_at": datetime.now(timezone.utc),
                "updated_at": None,
            }
        ],
    )

    op.create_table(
        "usercharacter",
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("character_code", sa.String(length=10), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["character_code"],
            ["character.code"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "character_code"),
    )
    op.add_column(
        "roomuser",
        sa.Column(
            "character_code",
            sqlmodel.sql.sqltypes.AutoString(length=10),
            nullable=False,
            server_default="c0",
        ),
    )
    op.create_index(
        op.f("ix_roomuser_character_code"), "roomuser", ["character_code"], unique=False
    )
    op.create_foreign_key(None, "roomuser", "character", ["character_code"], ["code"])
    op.add_column(
        "user",
        sa.Column(
            "character_code",
            sqlmodel.sql.sqltypes.AutoString(length=10),
            nullable=False,
            server_default="c0",
        ),
    )
    op.create_index(
        op.f("ix_user_character_code"), "user", ["character_code"], unique=False
    )
    op.create_foreign_key(None, "user", "character", ["character_code"], ["code"])
    # ### end Alembic commands ###

    # ── 기존 유저 모두에게 기본 캐릭터 소유 관계 부여 ─────────────────
    op.execute(
        sa.text(
            "INSERT INTO usercharacter (user_id, character_code, created_at, updated_at) "
            'SELECT id, :code, NOW(), NULL FROM "user"'
        ).bindparams(code="c0")
    )


def downgrade() -> None:
    # 기본 캐릭터 소유 관계 삭제
    op.execute(
        sa.text("DELETE FROM usercharacter WHERE character_code = :code").bindparams(
            code="c0"
        )
    )
    # 기본 캐릭터 삭제
    op.execute(
        sa.text("DELETE FROM character WHERE code = :code").bindparams(code="c0")
    )

    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "user", type_="foreignkey")
    op.drop_index(op.f("ix_user_character_code"), table_name="user")
    op.drop_column("user", "character_code")
    op.drop_constraint(None, "roomuser", type_="foreignkey")
    op.drop_index(op.f("ix_roomuser_character_code"), table_name="roomuser")
    op.drop_column("roomuser", "character_code")
    op.drop_table("usercharacter")
    op.drop_index(op.f("ix_character_code"), table_name="character")
    op.drop_table("character")
    # ### end Alembic commands ###
