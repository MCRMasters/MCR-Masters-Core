"""add email for user model

Revision ID: bb602092201d
Revises: f72f411d9180
Create Date: 2025-02-23 14:22:51.842624

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "bb602092201d"
down_revision: Union[str, None] = "f72f411d9180"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("uid", sqlmodel.sql.sqltypes.AutoString(), nullable=False)
    )
    op.add_column(
        "user",
        sa.Column(
            "nickname", sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False
        ),
    )
    op.add_column(
        "user", sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=True)
    )
    op.drop_constraint("user_username_key", "user", type_="unique")
    op.create_index(op.f("ix_user_uid"), "user", ["uid"], unique=True)
    op.drop_column("user", "password_hash")
    op.drop_column("user", "username")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "user",
        sa.Column("password_hash", sa.VARCHAR(), autoincrement=False, nullable=False),
    )
    op.drop_index(op.f("ix_user_uid"), table_name="user")
    op.create_unique_constraint("user_username_key", "user", ["username"])
    op.drop_column("user", "email")
    op.drop_column("user", "nickname")
    op.drop_column("user", "uid")
    # ### end Alembic commands ###
